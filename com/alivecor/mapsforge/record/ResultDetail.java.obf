package com.alivecor.ecg.record;

import com.alivecor.ai.o;
import com.alivecor.ecg.core.model.b;
import com.alivecor.ecg.core.model.d;
import com.alivecor.ecg.core.model.d.a;
import java.io.Serializable;

public class ResultDetail
  implements Serializable
{
  float bpm;
  private d.a hardwareType;
  private boolean inverted;
  o kaiResult;
  private b leadsConfig;
  private String localRecordingID;
  
  public ResultDetail() {}
  
  ResultDetail(RecordResult paramRecordResult, o paramO, float paramFloat)
  {
    kaiResult = paramO;
    bpm = paramFloat;
    if (paramRecordResult.getRecordingDeviceData() != null) {
      hardwareType = paramRecordResult.getRecordingDeviceData().d();
    }
    leadsConfig = paramRecordResult.getLeadsConfig();
    inverted = inverted;
    localRecordingID = localRecordingID;
  }
  
  public float getBpm()
  {
    return bpm;
  }
  
  public d.a getHardwareType()
  {
    return hardwareType;
  }
  
  public o getKaiResult()
  {
    return kaiResult;
  }
  
  public b getLeadsConfig()
  {
    return leadsConfig;
  }
  
  public String getLocalRecordingID()
  {
    return localRecordingID;
  }
  
  public boolean isInverted()
  {
    return inverted;
  }
  
  public void setBpm(float paramFloat)
  {
    bpm = paramFloat;
  }
  
  public void setHardwareType(d.a paramA)
  {
    hardwareType = paramA;
  }
  
  public void setInverted(boolean paramBoolean)
  {
    inverted = paramBoolean;
  }
  
  public void setKaiResult(o paramO)
  {
    kaiResult = paramO;
  }
  
  public void setLeadsConfig(b paramB)
  {
    leadsConfig = paramB;
  }
  
  public void setLocalRecordingID(String paramString)
  {
    localRecordingID = paramString;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("ResultDetail{bpm=");
    localStringBuilder.append(bpm);
    localStringBuilder.append(", kaiResult='");
    localStringBuilder.append(kaiResult);
    localStringBuilder.append('\'');
    localStringBuilder.append(", hardwareType=");
    localStringBuilder.append(hardwareType);
    localStringBuilder.append(", leadsConfig=");
    localStringBuilder.append(leadsConfig);
    localStringBuilder.append(", inverted=");
    localStringBuilder.append(inverted);
    localStringBuilder.append(", localRecordingID='");
    localStringBuilder.append(localRecordingID);
    localStringBuilder.append('\'');
    localStringBuilder.append('}');
    return localStringBuilder.toString();
  }
}
