package com.google.android.gms.internal.measurement;

import java.util.Iterator;
import java.util.List;

public final class zzbh
  extends zzaw
{
  protected zzbh()
  {
    zza.add(zzbl.zzA);
    zza.add(zzbl.zzB);
    zza.add(zzbl.zzC);
    zza.add(zzbl.zzD);
    zza.add(zzbl.zzE);
    zza.add(zzbl.zzF);
    zza.add(zzbl.zzG);
    zza.add(zzbl.zzan);
  }
  
  private static zzap zzc(zzbf paramZzbf, Iterator paramIterator, zzap paramZzap)
  {
    if (paramIterator != null) {
      while (paramIterator.hasNext())
      {
        Object localObject = paramZzbf.zza((zzap)paramIterator.next()).zzc((zzae)paramZzap);
        if ((localObject instanceof zzag))
        {
          localObject = (zzag)localObject;
          if ("break".equals(((zzag)localObject).zzc())) {
            return zzap.zzf;
          }
          if ("return".equals(((zzag)localObject).zzc())) {
            return localObject;
          }
        }
      }
    }
    return zzap.zzf;
  }
  
  private static zzap zzd(zzbf paramZzbf, zzap paramZzap1, zzap paramZzap2)
  {
    return zzc(paramZzbf, paramZzap1.zzl(), paramZzap2);
  }
  
  private static zzap zze(zzbf paramZzbf, zzap paramZzap1, zzap paramZzap2)
  {
    if ((paramZzap1 instanceof Iterable)) {
      return zzc(paramZzbf, ((Iterable)paramZzap1).iterator(), paramZzap2);
    }
    throw new IllegalArgumentException("Non-iterable type in for...of loop.");
  }
  
  public final zzap zza(String paramString, zzg paramZzg, List paramList)
  {
    Object localObject1 = zzbl.zza;
    int i = zzh.zze(paramString).ordinal();
    if (i != 65)
    {
      switch (i)
      {
      default: 
        return super.zzb(paramString);
      case 32: 
        zzh.zzh(zzbl.zzG.name(), 3, paramList);
        if ((paramList.get(0) instanceof zzat))
        {
          paramString = ((zzap)paramList.get(0)).zzi();
          localObject1 = paramZzg.zzb((zzap)paramList.get(1));
          paramList = paramZzg.zzb((zzap)paramList.get(2));
          return zze(new zzbe(paramZzg, paramString), (zzap)localObject1, paramList);
        }
        throw new IllegalArgumentException("Variable name in FOR_OF_LET must be a string");
      case 31: 
        zzh.zzh(zzbl.zzF.name(), 3, paramList);
        if ((paramList.get(0) instanceof zzat))
        {
          paramString = ((zzap)paramList.get(0)).zzi();
          localObject1 = paramZzg.zzb((zzap)paramList.get(1));
          paramList = paramZzg.zzb((zzap)paramList.get(2));
          return zze(new zzbd(paramZzg, paramString), (zzap)localObject1, paramList);
        }
        throw new IllegalArgumentException("Variable name in FOR_OF_CONST must be a string");
      case 30: 
        zzh.zzh(zzbl.zzE.name(), 3, paramList);
        if ((paramList.get(0) instanceof zzat))
        {
          paramString = ((zzap)paramList.get(0)).zzi();
          localObject1 = paramZzg.zzb((zzap)paramList.get(1));
          paramList = paramZzg.zzb((zzap)paramList.get(2));
          return zze(new zzbg(paramZzg, paramString), (zzap)localObject1, paramList);
        }
        throw new IllegalArgumentException("Variable name in FOR_OF must be a string");
      case 29: 
        zzh.zzh(zzbl.zzD.name(), 4, paramList);
        paramString = paramZzg.zzb((zzap)paramList.get(0));
        if ((paramString instanceof zzae))
        {
          localObject1 = (zzae)paramString;
          localObject2 = (zzap)paramList.get(1);
          zzap localZzap1 = (zzap)paramList.get(2);
          zzap localZzap2 = paramZzg.zzb((zzap)paramList.get(3));
          paramList = paramZzg.zza();
          i = 0;
          for (;;)
          {
            paramString = paramList;
            if (i >= ((zzae)localObject1).zzc()) {
              break;
            }
            paramString = ((zzae)localObject1).zze(i).zzi();
            paramList.zzg(paramString, paramZzg.zzd(paramString));
            i += 1;
          }
          while (paramZzg.zzb((zzap)localObject2).zzg().booleanValue())
          {
            paramList = paramZzg.zzc((zzae)localZzap2);
            if ((paramList instanceof zzag))
            {
              paramList = (zzag)paramList;
              if ("break".equals(paramList.zzc())) {
                return zzap.zzf;
              }
              if ("return".equals(paramList.zzc())) {
                return paramList;
              }
            }
            paramList = paramZzg.zza();
            i = 0;
            while (i < ((zzae)localObject1).zzc())
            {
              String str = ((zzae)localObject1).zze(i).zzi();
              paramList.zzg(str, paramString.zzd(str));
              i += 1;
            }
            paramList.zzb(localZzap1);
            paramString = paramList;
          }
          return zzap.zzf;
        }
        throw new IllegalArgumentException("Initializer variables in FOR_LET must be an ArrayList");
      case 28: 
        zzh.zzh(zzbl.zzC.name(), 3, paramList);
        if ((paramList.get(0) instanceof zzat))
        {
          paramString = ((zzap)paramList.get(0)).zzi();
          localObject1 = paramZzg.zzb((zzap)paramList.get(1));
          paramList = paramZzg.zzb((zzap)paramList.get(2));
          return zzd(new zzbe(paramZzg, paramString), (zzap)localObject1, paramList);
        }
        throw new IllegalArgumentException("Variable name in FOR_IN_LET must be a string");
      case 27: 
        zzh.zzh(zzbl.zzB.name(), 3, paramList);
        if ((paramList.get(0) instanceof zzat))
        {
          paramString = ((zzap)paramList.get(0)).zzi();
          localObject1 = paramZzg.zzb((zzap)paramList.get(1));
          paramList = paramZzg.zzb((zzap)paramList.get(2));
          return zzd(new zzbd(paramZzg, paramString), (zzap)localObject1, paramList);
        }
        throw new IllegalArgumentException("Variable name in FOR_IN_CONST must be a string");
      }
      zzh.zzh(zzbl.zzA.name(), 3, paramList);
      if ((paramList.get(0) instanceof zzat))
      {
        paramString = ((zzap)paramList.get(0)).zzi();
        localObject1 = paramZzg.zzb((zzap)paramList.get(1));
        paramList = paramZzg.zzb((zzap)paramList.get(2));
        return zzd(new zzbg(paramZzg, paramString), (zzap)localObject1, paramList);
      }
      throw new IllegalArgumentException("Variable name in FOR_IN must be a string");
    }
    zzh.zzh(zzbl.zzan.name(), 4, paramList);
    paramString = (zzap)paramList.get(0);
    localObject1 = (zzap)paramList.get(1);
    Object localObject2 = (zzap)paramList.get(2);
    paramList = paramZzg.zzb((zzap)paramList.get(3));
    if (paramZzg.zzb((zzap)localObject2).zzg().booleanValue())
    {
      localObject2 = paramZzg.zzc((zzae)paramList);
      if ((localObject2 instanceof zzag))
      {
        localObject2 = (zzag)localObject2;
        if ("break".equals(((zzag)localObject2).zzc())) {
          return zzap.zzf;
        }
        if ("return".equals(((zzag)localObject2).zzc())) {
          return localObject2;
        }
      }
    }
    while (paramZzg.zzb(paramString).zzg().booleanValue())
    {
      localObject2 = paramZzg.zzc((zzae)paramList);
      if ((localObject2 instanceof zzag))
      {
        localObject2 = (zzag)localObject2;
        if ("break".equals(((zzag)localObject2).zzc())) {
          return zzap.zzf;
        }
        if ("return".equals(((zzag)localObject2).zzc())) {
          return localObject2;
        }
      }
      paramZzg.zzb((zzap)localObject1);
    }
    return zzap.zzf;
  }
}
