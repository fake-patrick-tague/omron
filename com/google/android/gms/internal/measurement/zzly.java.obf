package com.google.android.gms.internal.measurement;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.RandomAccess;

final class zzly
{
  private static final Class zza;
  private static final zzmn zzb = zzab(false);
  private static final zzmn zzc = zzab(true);
  private static final zzmn zzd = new zzmp();
  
  static
  {
    try
    {
      localClass = Class.forName("com.google.protobuf.GeneratedMessage");
    }
    finally
    {
      Class localClass;
      for (;;) {}
    }
    localClass = null;
    zza = localClass;
  }
  
  public static zzmn zzA()
  {
    return zzc;
  }
  
  public static zzmn zzB()
  {
    return zzd;
  }
  
  static Object zzC(int paramInt, List paramList, zzki paramZzki, Object paramObject, zzmn paramZzmn)
  {
    if (paramZzki == null) {
      return paramObject;
    }
    int i;
    if ((paramList instanceof RandomAccess))
    {
      int k = paramList.size();
      i = 0;
      int j = 0;
      while (i < k)
      {
        int m = ((Integer)paramList.get(i)).intValue();
        if (paramZzki.zza(m))
        {
          if (i != j) {
            paramList.set(j, Integer.valueOf(m));
          }
          j += 1;
        }
        else
        {
          paramObject = zzD(paramInt, m, paramObject, paramZzmn);
        }
        i += 1;
      }
      if (j == k) {
        return paramObject;
      }
      paramList.subList(j, k).clear();
      return paramObject;
    }
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      i = ((Integer)paramList.next()).intValue();
      if (!paramZzki.zza(i))
      {
        paramObject = zzD(paramInt, i, paramObject, paramZzmn);
        paramList.remove();
      }
    }
    return paramObject;
  }
  
  static Object zzD(int paramInt1, int paramInt2, Object paramObject, zzmn paramZzmn)
  {
    Object localObject = paramObject;
    if (paramObject == null) {
      localObject = paramZzmn.zze();
    }
    paramZzmn.zzf(localObject, paramInt1, paramInt2);
    return localObject;
  }
  
  static void zzE(zzjr paramZzjr, Object paramObject1, Object paramObject2)
  {
    paramZzjr.zza(paramObject2);
    throw null;
  }
  
  static void zzF(zzmn paramZzmn, Object paramObject1, Object paramObject2)
  {
    paramZzmn.zzh(paramObject1, paramZzmn.zzd(paramZzmn.zzc(paramObject1), paramZzmn.zzc(paramObject2)));
  }
  
  public static void zzG(Class paramClass)
  {
    if (!zzke.class.isAssignableFrom(paramClass))
    {
      Class localClass = zza;
      if (localClass != null)
      {
        if (localClass.isAssignableFrom(paramClass)) {
          return;
        }
        throw new IllegalArgumentException("Message classes must extend GeneratedMessage or GeneratedMessageLite");
      }
    }
  }
  
  public static void zzH(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzc(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzI(int paramInt, List paramList, zznf paramZznf)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zze(paramInt, paramList);
    }
  }
  
  public static void zzJ(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzg(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzK(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzj(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzL(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzl(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzM(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzn(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzN(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzp(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzO(int paramInt, List paramList, zznf paramZznf, zzlw paramZzlw)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty()))
    {
      int i = 0;
      while (i < paramList.size())
      {
        Object localObject = paramList.get(i);
        ((zzjm)paramZznf).zzq(paramInt, localObject, paramZzlw);
        i += 1;
      }
    }
  }
  
  public static void zzP(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzs(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzQ(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzu(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzR(int paramInt, List paramList, zznf paramZznf, zzlw paramZzlw)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty()))
    {
      int i = 0;
      while (i < paramList.size())
      {
        Object localObject = paramList.get(i);
        ((zzjm)paramZznf).zzv(paramInt, localObject, paramZzlw);
        i += 1;
      }
    }
  }
  
  public static void zzS(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzx(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzT(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzz(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzU(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzB(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzV(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzD(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzW(int paramInt, List paramList, zznf paramZznf)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzG(paramInt, paramList);
    }
  }
  
  public static void zzX(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzI(paramInt, paramList, paramBoolean);
    }
  }
  
  public static void zzY(int paramInt, List paramList, zznf paramZznf, boolean paramBoolean)
    throws IOException
  {
    if ((paramList != null) && (!paramList.isEmpty())) {
      paramZznf.zzK(paramInt, paramList, paramBoolean);
    }
  }
  
  static boolean zzZ(Object paramObject1, Object paramObject2)
  {
    boolean bool = false;
    if (paramObject1 != paramObject2)
    {
      if (paramObject1 == null) {
        return bool;
      }
      if (!paramObject1.equals(paramObject2)) {
        return false;
      }
    }
    bool = true;
    return bool;
  }
  
  static int zza(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return i * (zzjl.zzA(paramInt << 3) + 1);
  }
  
  static void zzaa(zzlg paramZzlg, Object paramObject1, Object paramObject2, long paramLong)
  {
    zzmx.zzs(paramObject1, paramLong, zzlg.zzb(zzmx.zzf(paramObject1, paramLong), zzmx.zzf(paramObject2, paramLong)));
  }
  
  /* Error */
  private static zzmn zzab(boolean paramBoolean)
  {
    // Byte code:
    //   0: ldc -3
    //   2: invokestatic 20	java/lang/Class:forName	(Ljava/lang/String;)Ljava/lang/Class;
    //   5: astore_1
    //   6: goto +5 -> 11
    //   9: aconst_null
    //   10: astore_1
    //   11: aload_1
    //   12: ifnonnull +5 -> 17
    //   15: aconst_null
    //   16: areturn
    //   17: aload_1
    //   18: iconst_1
    //   19: anewarray 16	java/lang/Class
    //   22: dup
    //   23: iconst_0
    //   24: getstatic 258	java/lang/Boolean:TYPE	Ljava/lang/Class;
    //   27: aastore
    //   28: invokevirtual 262	java/lang/Class:getConstructor	([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
    //   31: iconst_1
    //   32: anewarray 4	java/lang/Object
    //   35: dup
    //   36: iconst_0
    //   37: iload_0
    //   38: invokestatic 265	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   41: aastore
    //   42: invokevirtual 271	java/lang/reflect/Constructor:newInstance	([Ljava/lang/Object;)Ljava/lang/Object;
    //   45: checkcast 103	com/google/android/gms/internal/measurement/zzmn
    //   48: astore_1
    //   49: aload_1
    //   50: areturn
    //   51: astore_1
    //   52: goto -43 -> 9
    //   55: astore_1
    //   56: aconst_null
    //   57: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	58	0	paramBoolean	boolean
    //   5	45	1	localObject1	Object
    //   51	1	1	localObject2	Object
    //   55	1	1	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   0	6	51	finally
    //   17	49	55	finally
  }
  
  static int zzb(List paramList)
  {
    return paramList.size();
  }
  
  static int zzc(int paramInt, List paramList)
  {
    int j = paramList.size();
    int i = 0;
    if (j == 0) {
      return 0;
    }
    j *= zzjl.zzz(paramInt);
    paramInt = i;
    i = j;
    while (paramInt < paramList.size())
    {
      i += zzjl.zzt((zzjd)paramList.get(paramInt));
      paramInt += 1;
    }
    return i;
  }
  
  static int zzd(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return zze(paramList) + i * zzjl.zzz(paramInt);
  }
  
  static int zze(List paramList)
  {
    int m = paramList.size();
    int j = 0;
    int k = 0;
    if (m == 0) {
      return 0;
    }
    if ((paramList instanceof zzkf))
    {
      paramList = (zzkf)paramList;
      i = 0;
      for (;;)
      {
        j = i;
        if (k >= m) {
          break;
        }
        i += zzjl.zzv(paramList.zze(k));
        k += 1;
      }
    }
    int i = 0;
    k = j;
    for (;;)
    {
      j = i;
      if (k >= m) {
        break;
      }
      i += zzjl.zzv(((Integer)paramList.get(k)).intValue());
      k += 1;
    }
    return j;
  }
  
  static int zzf(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return i * (zzjl.zzA(paramInt << 3) + 4);
  }
  
  static int zzg(List paramList)
  {
    return paramList.size() * 4;
  }
  
  static int zzh(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return i * (zzjl.zzA(paramInt << 3) + 8);
  }
  
  static int zzi(List paramList)
  {
    return paramList.size() * 8;
  }
  
  static int zzj(int paramInt, List paramList, zzlw paramZzlw)
  {
    int k = paramList.size();
    int i = 0;
    if (k != 0)
    {
      int j = 0;
      while (i < k)
      {
        j += zzjl.zzu(paramInt, (zzll)paramList.get(i), paramZzlw);
        i += 1;
      }
      return j;
    }
    return 0;
  }
  
  static int zzk(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return zzl(paramList) + i * zzjl.zzz(paramInt);
  }
  
  static int zzl(List paramList)
  {
    int m = paramList.size();
    int j = 0;
    int k = 0;
    if (m == 0) {
      return 0;
    }
    if ((paramList instanceof zzkf))
    {
      paramList = (zzkf)paramList;
      i = 0;
      for (;;)
      {
        j = i;
        if (k >= m) {
          break;
        }
        i += zzjl.zzv(paramList.zze(k));
        k += 1;
      }
    }
    int i = 0;
    k = j;
    for (;;)
    {
      j = i;
      if (k >= m) {
        break;
      }
      i += zzjl.zzv(((Integer)paramList.get(k)).intValue());
      k += 1;
    }
    return j;
  }
  
  static int zzm(int paramInt, List paramList, boolean paramBoolean)
  {
    if (paramList.size() == 0) {
      return 0;
    }
    return zzn(paramList) + paramList.size() * zzjl.zzz(paramInt);
  }
  
  static int zzn(List paramList)
  {
    int m = paramList.size();
    int j = 0;
    int k = 0;
    if (m == 0) {
      return 0;
    }
    if ((paramList instanceof zzla))
    {
      paramList = (zzla)paramList;
      i = 0;
      for (;;)
      {
        j = i;
        if (k >= m) {
          break;
        }
        i += zzjl.zzB(paramList.zza(k));
        k += 1;
      }
    }
    int i = 0;
    k = j;
    for (;;)
    {
      j = i;
      if (k >= m) {
        break;
      }
      i += zzjl.zzB(((Long)paramList.get(k)).longValue());
      k += 1;
    }
    return j;
  }
  
  static int zzo(int paramInt, Object paramObject, zzlw paramZzlw)
  {
    if ((paramObject instanceof zzkr))
    {
      paramObject = (zzkr)paramObject;
      paramInt = zzjl.zzA(paramInt << 3);
      int i = paramObject.zza();
      return paramInt + (zzjl.zzA(i) + i);
    }
    paramObject = (zzll)paramObject;
    return zzjl.zzA(paramInt << 3) + zzjl.zzx(paramObject, paramZzlw);
  }
  
  static int zzp(int paramInt, List paramList, zzlw paramZzlw)
  {
    int k = paramList.size();
    int j = 0;
    if (k == 0) {
      return 0;
    }
    int i = zzjl.zzz(paramInt) * k;
    paramInt = j;
    while (paramInt < k)
    {
      Object localObject = paramList.get(paramInt);
      if ((localObject instanceof zzkr)) {
        j = zzjl.zzw((zzkr)localObject);
      } else {
        j = zzjl.zzx((zzll)localObject, paramZzlw);
      }
      i += j;
      paramInt += 1;
    }
    return i;
  }
  
  static int zzq(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return zzr(paramList) + i * zzjl.zzz(paramInt);
  }
  
  static int zzr(List paramList)
  {
    int m = paramList.size();
    int k = 0;
    int j = 0;
    if (m == 0) {
      return 0;
    }
    if ((paramList instanceof zzkf))
    {
      paramList = (zzkf)paramList;
      i = 0;
      for (;;)
      {
        k = i;
        if (j >= m) {
          break;
        }
        k = paramList.zze(j);
        i += zzjl.zzA(k >> 31 ^ k + k);
        j += 1;
      }
    }
    int i = 0;
    j = k;
    for (;;)
    {
      k = i;
      if (j >= m) {
        break;
      }
      k = ((Integer)paramList.get(j)).intValue();
      i += zzjl.zzA(k >> 31 ^ k + k);
      j += 1;
    }
    return k;
  }
  
  static int zzs(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return zzt(paramList) + i * zzjl.zzz(paramInt);
  }
  
  static int zzt(List paramList)
  {
    int m = paramList.size();
    int j = 0;
    int k = 0;
    if (m == 0) {
      return 0;
    }
    long l;
    if ((paramList instanceof zzla))
    {
      paramList = (zzla)paramList;
      i = 0;
      for (;;)
      {
        j = i;
        if (k >= m) {
          break;
        }
        l = paramList.zza(k);
        i += zzjl.zzB(l >> 63 ^ l + l);
        k += 1;
      }
    }
    int i = 0;
    k = j;
    for (;;)
    {
      j = i;
      if (k >= m) {
        break;
      }
      l = ((Long)paramList.get(k)).longValue();
      i += zzjl.zzB(l >> 63 ^ l + l);
      k += 1;
    }
    return j;
  }
  
  static int zzu(int paramInt, List paramList)
  {
    int m = paramList.size();
    int i = 0;
    int k = 0;
    if (m == 0) {
      return 0;
    }
    int j = zzjl.zzz(paramInt) * m;
    paramInt = j;
    Object localObject;
    if ((paramList instanceof zzkt))
    {
      paramList = (zzkt)paramList;
      paramInt = j;
      i = k;
      for (;;)
      {
        j = paramInt;
        if (i >= m) {
          break;
        }
        localObject = paramList.zzf(i);
        if ((localObject instanceof zzjd)) {
          j = zzjl.zzt((zzjd)localObject);
        } else {
          j = zzjl.zzy((String)localObject);
        }
        paramInt += j;
        i += 1;
      }
    }
    for (;;)
    {
      j = paramInt;
      if (i >= m) {
        break;
      }
      localObject = paramList.get(i);
      if ((localObject instanceof zzjd)) {
        j = zzjl.zzt((zzjd)localObject);
      } else {
        j = zzjl.zzy((String)localObject);
      }
      paramInt += j;
      i += 1;
    }
    return j;
  }
  
  static int zzv(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return zzw(paramList) + i * zzjl.zzz(paramInt);
  }
  
  static int zzw(List paramList)
  {
    int m = paramList.size();
    int j = 0;
    int k = 0;
    if (m == 0) {
      return 0;
    }
    if ((paramList instanceof zzkf))
    {
      paramList = (zzkf)paramList;
      i = 0;
      for (;;)
      {
        j = i;
        if (k >= m) {
          break;
        }
        i += zzjl.zzA(paramList.zze(k));
        k += 1;
      }
    }
    int i = 0;
    k = j;
    for (;;)
    {
      j = i;
      if (k >= m) {
        break;
      }
      i += zzjl.zzA(((Integer)paramList.get(k)).intValue());
      k += 1;
    }
    return j;
  }
  
  static int zzx(int paramInt, List paramList, boolean paramBoolean)
  {
    int i = paramList.size();
    if (i == 0) {
      return 0;
    }
    return zzy(paramList) + i * zzjl.zzz(paramInt);
  }
  
  static int zzy(List paramList)
  {
    int m = paramList.size();
    int j = 0;
    int k = 0;
    if (m == 0) {
      return 0;
    }
    if ((paramList instanceof zzla))
    {
      paramList = (zzla)paramList;
      i = 0;
      for (;;)
      {
        j = i;
        if (k >= m) {
          break;
        }
        i += zzjl.zzB(paramList.zza(k));
        k += 1;
      }
    }
    int i = 0;
    k = j;
    for (;;)
    {
      j = i;
      if (k >= m) {
        break;
      }
      i += zzjl.zzB(((Long)paramList.get(k)).longValue());
      k += 1;
    }
    return j;
  }
  
  public static zzmn zzz()
  {
    return zzb;
  }
}
