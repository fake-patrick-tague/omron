package com.google.android.gms.internal.measurement;

import android.content.ContentResolver;
import android.database.ContentObserver;
import android.database.sqlite.SQLiteException;
import android.net.Uri;
import android.os.StrictMode;
import android.os.StrictMode.ThreadPolicy;
import android.util.Log;
import c.e.a;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Objects;

public final class zzhe
  implements zzhj
{
  public static final String[] zza = { "key", "value" };
  private static final Map zzb = new a();
  private final ContentResolver zzc;
  private final Uri zzd;
  private final Runnable zze;
  private final ContentObserver zzf;
  private final Object zzg;
  private volatile Map zzh;
  private final List zzi;
  
  private zzhe(ContentResolver paramContentResolver, Uri paramUri, Runnable paramRunnable)
  {
    zzhd localZzhd = new zzhd(this, null);
    zzf = localZzhd;
    zzg = new Object();
    zzi = new ArrayList();
    Objects.requireNonNull(paramContentResolver);
    Objects.requireNonNull(paramUri);
    zzc = paramContentResolver;
    zzd = paramUri;
    zze = paramRunnable;
    paramContentResolver.registerContentObserver(paramUri, false, localZzhd);
  }
  
  /* Error */
  public static zzhe zza(ContentResolver paramContentResolver, Uri paramUri, Runnable paramRunnable)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: getstatic 32	com/google/android/gms/internal/measurement/zzhe:zzb	Ljava/util/Map;
    //   6: astore 5
    //   8: aload 5
    //   10: aload_1
    //   11: invokeinterface 83 2 0
    //   16: checkcast 2	com/google/android/gms/internal/measurement/zzhe
    //   19: astore 4
    //   21: aload 4
    //   23: astore_3
    //   24: aload 4
    //   26: ifnonnull +24 -> 50
    //   29: new 2	com/google/android/gms/internal/measurement/zzhe
    //   32: dup
    //   33: aload_0
    //   34: aload_1
    //   35: aload_2
    //   36: invokespecial 85	com/google/android/gms/internal/measurement/zzhe:<init>	(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/Runnable;)V
    //   39: astore_3
    //   40: aload 5
    //   42: aload_1
    //   43: aload_3
    //   44: invokeinterface 89 3 0
    //   49: pop
    //   50: ldc 2
    //   52: monitorexit
    //   53: aload_3
    //   54: areturn
    //   55: astore_0
    //   56: ldc 2
    //   58: monitorexit
    //   59: aload_0
    //   60: athrow
    //   61: astore_0
    //   62: aload 4
    //   64: astore_3
    //   65: goto -15 -> 50
    //   68: astore_0
    //   69: goto -19 -> 50
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	72	0	paramContentResolver	ContentResolver
    //   0	72	1	paramUri	Uri
    //   0	72	2	paramRunnable	Runnable
    //   23	42	3	localZzhe1	zzhe
    //   19	44	4	localZzhe2	zzhe
    //   6	35	5	localMap	Map
    // Exception table:
    //   from	to	target	type
    //   3	21	55	finally
    //   29	40	55	finally
    //   40	50	55	finally
    //   50	53	55	finally
    //   56	59	55	finally
    //   29	40	61	java/lang/SecurityException
    //   40	50	68	java/lang/SecurityException
  }
  
  static void zze()
  {
    try
    {
      Iterator localIterator = zzb.values().iterator();
      while (localIterator.hasNext())
      {
        zzhe localZzhe = (zzhe)localIterator.next();
        zzc.unregisterContentObserver(zzf);
      }
      zzb.clear();
      return;
    }
    finally {}
  }
  
  public final Map zzc()
  {
    Object localObject4 = zzh;
    Object localObject1 = localObject4;
    if (localObject4 == null) {
      label81:
      label87:
      synchronized (zzg)
      {
        localObject4 = zzh;
        localObject1 = localObject4;
        if (localObject4 == null) {
          localObject4 = StrictMode.allowThreadDiskReads();
        }
        try
        {
          try
          {
            localObject1 = (Map)zzhh.zza(new zzhc(this));
            StrictMode.setThreadPolicy((StrictMode.ThreadPolicy)localObject4);
          }
          finally
          {
            break label81;
          }
        }
        catch (SecurityException|SQLiteException|IllegalStateException localSecurityException)
        {
          Object localObject3;
          for (;;) {}
        }
        Log.e("ConfigurationContentLdr", "PhenotypeFlag unable to load ContentProvider, using default values");
        StrictMode.setThreadPolicy((StrictMode.ThreadPolicy)localObject4);
        localObject3 = null;
        zzh = localObject3;
        break label87;
        StrictMode.setThreadPolicy((StrictMode.ThreadPolicy)localObject4);
        throw localObject3;
      }
    }
    if (localMap != null) {
      return localMap;
    }
    return Collections.emptyMap();
  }
  
  public final void zzf()
  {
    synchronized (zzg)
    {
      zzh = null;
      zze.run();
      try
      {
        ??? = zzi.iterator();
        while (((Iterator)???).hasNext()) {
          ((zzhf)((Iterator)???).next()).zza();
        }
        return;
      }
      finally {}
    }
  }
}
