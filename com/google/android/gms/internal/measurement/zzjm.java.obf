package com.google.android.gms.internal.measurement;

import java.io.IOException;
import java.util.List;

final class zzjm
  implements zznf
{
  private final zzjl zza;
  
  private zzjm(zzjl paramZzjl)
  {
    zzkm.zzf(paramZzjl, "output");
    zza = paramZzjl;
    zza = this;
  }
  
  public static zzjm zza(zzjl paramZzjl)
  {
    zzjm localZzjm = zza;
    if (localZzjm != null) {
      return localZzjm;
    }
    return new zzjm(paramZzjl);
  }
  
  public final void zzA(int paramInt1, int paramInt2)
    throws IOException
  {
    zza.zzp(paramInt1, paramInt2 >> 31 ^ paramInt2 + paramInt2);
  }
  
  public final void zzB(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    zzjl localZzjl;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        int k = ((Integer)paramList.get(paramInt)).intValue();
        i += zzjl.zzA(k >> 31 ^ k + k);
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        localZzjl = zza;
        i = ((Integer)paramList.get(paramInt)).intValue();
        localZzjl.zzq(i >> 31 ^ i + i);
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      localZzjl = zza;
      j = ((Integer)paramList.get(i)).intValue();
      localZzjl.zzp(paramInt, j >> 31 ^ j + j);
      i += 1;
    }
  }
  
  public final void zzC(int paramInt, long paramLong)
    throws IOException
  {
    zza.zzr(paramInt, paramLong >> 63 ^ paramLong + paramLong);
  }
  
  public final void zzD(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    long l;
    zzjl localZzjl;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        l = ((Long)paramList.get(paramInt)).longValue();
        i += zzjl.zzB(l >> 63 ^ l + l);
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        localZzjl = zza;
        l = ((Long)paramList.get(paramInt)).longValue();
        localZzjl.zzs(l >> 63 ^ l + l);
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      localZzjl = zza;
      l = ((Long)paramList.get(i)).longValue();
      localZzjl.zzr(paramInt, l >> 63 ^ l + l);
      i += 1;
    }
  }
  
  @Deprecated
  public final void zzE(int paramInt)
    throws IOException
  {
    zza.zzo(paramInt, 3);
  }
  
  public final void zzF(int paramInt, String paramString)
    throws IOException
  {
    zza.zzm(paramInt, paramString);
  }
  
  public final void zzG(int paramInt, List paramList)
    throws IOException
  {
    boolean bool = paramList instanceof zzkt;
    int i = 0;
    int j = 0;
    if (bool)
    {
      zzkt localZzkt = (zzkt)paramList;
      i = j;
      while (i < paramList.size())
      {
        Object localObject = localZzkt.zzf(i);
        if ((localObject instanceof String)) {
          zza.zzm(paramInt, (String)localObject);
        } else {
          zza.zze(paramInt, (zzjd)localObject);
        }
        i += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzm(paramInt, (String)paramList.get(i));
      i += 1;
    }
  }
  
  public final void zzH(int paramInt1, int paramInt2)
    throws IOException
  {
    zza.zzp(paramInt1, paramInt2);
  }
  
  public final void zzI(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        i += zzjl.zzA(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzq(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzp(paramInt, ((Integer)paramList.get(i)).intValue());
      i += 1;
    }
  }
  
  public final void zzJ(int paramInt, long paramLong)
    throws IOException
  {
    zza.zzr(paramInt, paramLong);
  }
  
  public final void zzK(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        i += zzjl.zzB(((Long)paramList.get(paramInt)).longValue());
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzs(((Long)paramList.get(paramInt)).longValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzr(paramInt, ((Long)paramList.get(i)).longValue());
      i += 1;
    }
  }
  
  public final void zzb(int paramInt, boolean paramBoolean)
    throws IOException
  {
    zza.zzd(paramInt, paramBoolean);
  }
  
  public final void zzc(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.provideAs(TypeTransformer.java:780)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:659)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:698)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.s1stmt(TypeTransformer.java:810)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.sxStmt(TypeTransformer.java:840)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:206)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n");
  }
  
  public final void zzd(int paramInt, zzjd paramZzjd)
    throws IOException
  {
    zza.zze(paramInt, paramZzjd);
  }
  
  public final void zze(int paramInt, List paramList)
    throws IOException
  {
    int i = 0;
    while (i < paramList.size())
    {
      zza.zze(paramInt, (zzjd)paramList.get(i));
      i += 1;
    }
  }
  
  public final void zzf(int paramInt, double paramDouble)
    throws IOException
  {
    zza.zzh(paramInt, Double.doubleToRawLongBits(paramDouble));
  }
  
  public final void zzg(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        ((Double)paramList.get(paramInt)).doubleValue();
        i += 8;
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzi(Double.doubleToRawLongBits(((Double)paramList.get(paramInt)).doubleValue()));
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzh(paramInt, Double.doubleToRawLongBits(((Double)paramList.get(i)).doubleValue()));
      i += 1;
    }
  }
  
  @Deprecated
  public final void zzh(int paramInt)
    throws IOException
  {
    zza.zzo(paramInt, 4);
  }
  
  public final void zzi(int paramInt1, int paramInt2)
    throws IOException
  {
    zza.zzj(paramInt1, paramInt2);
  }
  
  public final void zzj(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        i += zzjl.zzv(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzk(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzj(paramInt, ((Integer)paramList.get(i)).intValue());
      i += 1;
    }
  }
  
  public final void zzk(int paramInt1, int paramInt2)
    throws IOException
  {
    zza.zzf(paramInt1, paramInt2);
  }
  
  public final void zzl(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        ((Integer)paramList.get(paramInt)).intValue();
        i += 4;
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzg(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzf(paramInt, ((Integer)paramList.get(i)).intValue());
      i += 1;
    }
  }
  
  public final void zzm(int paramInt, long paramLong)
    throws IOException
  {
    zza.zzh(paramInt, paramLong);
  }
  
  public final void zzn(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        ((Long)paramList.get(paramInt)).longValue();
        i += 8;
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzi(((Long)paramList.get(paramInt)).longValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzh(paramInt, ((Long)paramList.get(i)).longValue());
      i += 1;
    }
  }
  
  public final void zzo(int paramInt, float paramFloat)
    throws IOException
  {
    zza.zzf(paramInt, Float.floatToRawIntBits(paramFloat));
  }
  
  public final void zzp(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        ((Float)paramList.get(paramInt)).floatValue();
        i += 4;
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzg(Float.floatToRawIntBits(((Float)paramList.get(paramInt)).floatValue()));
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzf(paramInt, Float.floatToRawIntBits(((Float)paramList.get(i)).floatValue()));
      i += 1;
    }
  }
  
  public final void zzq(int paramInt, Object paramObject, zzlw paramZzlw)
    throws IOException
  {
    zzjl localZzjl = zza;
    paramObject = (zzll)paramObject;
    localZzjl.zzo(paramInt, 3);
    paramZzlw.zzi(paramObject, zza);
    localZzjl.zzo(paramInt, 4);
  }
  
  public final void zzr(int paramInt1, int paramInt2)
    throws IOException
  {
    zza.zzj(paramInt1, paramInt2);
  }
  
  public final void zzs(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        i += zzjl.zzv(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzk(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzj(paramInt, ((Integer)paramList.get(i)).intValue());
      i += 1;
    }
  }
  
  public final void zzt(int paramInt, long paramLong)
    throws IOException
  {
    zza.zzr(paramInt, paramLong);
  }
  
  public final void zzu(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        i += zzjl.zzB(((Long)paramList.get(paramInt)).longValue());
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzs(((Long)paramList.get(paramInt)).longValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzr(paramInt, ((Long)paramList.get(i)).longValue());
      i += 1;
    }
  }
  
  public final void zzv(int paramInt, Object paramObject, zzlw paramZzlw)
    throws IOException
  {
    Object localObject = zza;
    paramObject = (zzll)paramObject;
    localObject = (zzji)localObject;
    ((zzji)localObject).zzq(paramInt << 3 | 0x2);
    zzin localZzin = (zzin)paramObject;
    int i = localZzin.zzbr();
    paramInt = i;
    if (i == -1)
    {
      paramInt = paramZzlw.zza(localZzin);
      localZzin.zzbu(paramInt);
    }
    ((zzji)localObject).zzq(paramInt);
    paramZzlw.zzi(paramObject, zza);
  }
  
  public final void zzw(int paramInt1, int paramInt2)
    throws IOException
  {
    zza.zzf(paramInt1, paramInt2);
  }
  
  public final void zzx(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        ((Integer)paramList.get(paramInt)).intValue();
        i += 4;
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzg(((Integer)paramList.get(paramInt)).intValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzf(paramInt, ((Integer)paramList.get(i)).intValue());
      i += 1;
    }
  }
  
  public final void zzy(int paramInt, long paramLong)
    throws IOException
  {
    zza.zzh(paramInt, paramLong);
  }
  
  public final void zzz(int paramInt, List paramList, boolean paramBoolean)
    throws IOException
  {
    int i = 0;
    int j = 0;
    if (paramBoolean)
    {
      zza.zzo(paramInt, 2);
      paramInt = 0;
      i = paramInt;
      while (paramInt < paramList.size())
      {
        ((Long)paramList.get(paramInt)).longValue();
        i += 8;
        paramInt += 1;
      }
      zza.zzq(i);
      paramInt = j;
      while (paramInt < paramList.size())
      {
        zza.zzi(((Long)paramList.get(paramInt)).longValue());
        paramInt += 1;
      }
    }
    while (i < paramList.size())
    {
      zza.zzh(paramInt, ((Long)paramList.get(i)).longValue());
      i += 1;
    }
  }
}
