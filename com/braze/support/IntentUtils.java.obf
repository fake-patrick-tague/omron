package com.braze.support;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.ResolveInfoFlags;
import android.content.pm.ResolveInfo;
import android.os.Build.VERSION;
import java.util.Iterator;
import java.util.Random;
import kotlin.LazyThreadSafetyMode;
import kotlin.g;
import kotlin.h;
import kotlin.x.c.a;
import kotlin.x.d.i;
import kotlin.x.d.j;

public final class IntentUtils
{
  public static final IntentUtils INSTANCE = new IntentUtils();
  private static final g random$delegate = h.a(LazyThreadSafetyMode.d, b.b);
  
  private IntentUtils() {}
  
  public static final void addComponentAndSendBroadcast(Context paramContext, Intent paramIntent)
  {
    i.e(paramContext, "context");
    i.e(paramIntent, "intent");
    if (Build.VERSION.SDK_INT >= 33) {
      localObject1 = paramContext.getPackageManager().queryBroadcastReceivers(paramIntent, PackageManager.ResolveInfoFlags.of(0L));
    } else {
      localObject1 = paramContext.getPackageManager().queryBroadcastReceivers(paramIntent, 0);
    }
    i.d(localObject1, "if (Build.VERSION.SDK_IN?vers(intent, 0)\n        }");
    Object localObject1 = ((Iterable)localObject1).iterator();
    while (((Iterator)localObject1).hasNext())
    {
      Object localObject2 = (ResolveInfo)((Iterator)localObject1).next();
      final Intent localIntent = new Intent(paramIntent);
      localObject2 = activityInfo;
      localObject2 = new ComponentName(applicationInfo.packageName, name);
      localIntent.setComponent((ComponentName)localObject2);
      paramContext.sendBroadcast(localIntent);
      BrazeLogger.brazelog$default(BrazeLogger.INSTANCE, INSTANCE, BrazeLogger.Priority.V, null, new a((ComponentName)localObject2, localIntent), 2, null);
    }
  }
  
  public static final int getImmutablePendingIntentFlags()
  {
    if (Build.VERSION.SDK_INT >= 23) {
      return 67108864;
    }
    return 0;
  }
  
  private final Random getRandom()
  {
    return (Random)random$delegate.getValue();
  }
  
  public static final int getRequestCode()
  {
    return INSTANCE.getRandom().nextInt(1073741823) + 100000;
  }
  
  static final class a
    extends j
    implements a<String>
  {
    a(ComponentName paramComponentName, Intent paramIntent)
    {
      super();
    }
    
    public final String a()
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("Sent intent with component ");
      localStringBuilder.append(b);
      localStringBuilder.append(" and explicit intent ");
      localStringBuilder.append(localIntent);
      return localStringBuilder.toString();
    }
  }
  
  static final class b
    extends j
    implements a<Random>
  {
    public static final b b = new b();
    
    b()
    {
      super();
    }
    
    public final Random a()
    {
      return new Random();
    }
  }
}
